project/
├── bin/                                    	# 编译后的二进制文件
│   └── api                                		# API服务器二进制文件
│
├── cmd/                                    	# 应用程序入口点
│   └── api/						#
│       └── main.go                        			#  主函数（应用程序启动、依赖注入配置） package main 对应原项目 ./main.go
│
├── configs/                                	# 配置文件
│   ├── app.yaml                           		# 应用配置文件
│   ├── test.yaml                           		# 测试环境配置
│   └── production.yaml              		# 生产环境配置
│
├── internal/                           	# 私有应用程序代码
│   ├── app/                                		# 应用层
│   │   ├── container/                    		# 依赖注入容器 package container
│   │   │   ├── container. go               			# 依赖注入容器
│   │   │   └── container_test.go        			# 容器测试
│   │   └── config/					# package config 对应原项目 ./config/*
│   │       ├── config.go                 		# 配置加载
│   │       ├── config_test.go             		# 配置测试
│   │       ├── database.go                		# 数据库配置
│   │       └── database_test.go           		# 数据库配置测试
│   │
│   ├── domain/                            		# 领域层
│   │   ├── entity/                        			# 领域实体 package entity 对应原项目 ./models/*
│   │   │   ├── order.go                   			# 订单实体
│   │   │   ├── order_test.go              			# 订单实体测试
│   │   │   ├── user.go                    			# 用户实体
│   │   │   ├── user_test.go               			# 用户实体测试
│   │   │   ├── trade.go                   			# 交易实体
│   │   │   └── trade_test.go              			# 交易实体测试
│   │   │
│   │   ├── repository/               			# 仓储接口 package repository 
│   │   │   ├── order.go                				# 订单仓储接口
│   │   │   └── user.go                    			# 用户仓储接口
│   │   │
│   │   └── matching/                   			# 领域服务（核心业务逻辑） package matching 对应原项目 ./services/matching/matching.go
│   │       ├── engine.go                  			# 撮合引擎
│   │       └── engine_test.go             			# 撮合引擎测试
│   │
│   ├── infrastructure/            		# 基础设施层
│   │   ├── persistence/                			# 持久化实现
│   │   │   ├── mysql/                     			# package mysql 对应原项目 ./models/* 中的数据库操作部分
│   │   │   │   ├── order_repo.go          				# MySQL 订单仓储实现
│   │   │   │   ├── order_repo_test.go     			# 订单仓储测试
│   │   │   │   ├── user_repo.go           				# MySQL 用户仓储实现
│   │   │   │   └── user_repo_test.go      			# 用户仓储测试
│   │   │   └── redis/						# package redis
│   │   │       ├── cache.go               				# Redis 缓存实现
│   │   │       └── cache_test.go          				# Redis 缓存测试
│   │   │
│   │   ├── messaging/      				# 消息队列
│   │   │   └── kafka/						# package kafka
│   │   │       ├── producer.go            				# Kafka生产者
│   │   │       └── producer_test.go       			# 生产者测试
│   │   │
│   │   └── security/                      			# 安全相关
│   │       └── jwt/							# package jwt
│   │           ├── token.go               				# JWT 实现
│   │           └── token_test.go          				# JWT 测试
│
│   ├── interfaces/             			# 接口层
│   │   └── http/                          			# HTTP接口
│   │       ├── dto/                       				# 数据传输对象 package dto 对应原项目 ./services/requests.go
│   │       │   ├── order.go               				# 订单 DTO
│   │       │   └── auth.go                				# 认证 DTO
│   │       │
│   │       ├── handler/                   			# HTTP 处理器 package handler 对应原项目 ./controllers/*
│   │       │   ├── order.go               				# 订单处理器
│   │       │   ├── order_test.go         	 			# 订单处理器测试
│   │       │   ├── auth.go                				# 认证处理器
│   │       │   └── auth_test.go           				# 认证处理器测试
│   │       │
│   │       ├── middleware/                			# HTTP 中间件 package middleware
│   │       │   ├── auth.go                				# 认证中间件
│   │       │   ├── auth_test.go           				# 认证中间件测试
│   │       │   ├── http_logger.go         				# HTTP 日志中间件
│   │       │   └── rate_limit.go          				# 限流中间件
│   │       │
│   │       └── router/                    				# 路由配置 package router
│   │           ├── router.go              				# 路由注册
│   │           └── router_test.go         				# 路由测试
│   │
│   └── usecase/             			# 用例层（替代原application层）
│       ├── order/                         			# package orderusecase 对应原项目 ./services/order/order_service.go
│       │   ├── service.go                 			# 订单用例
│       │   ├── service_test.go            			# 订单用例测试
│       │   └── dto.go                     				# 内部DTO
│       └── auth/						# package authusecase 对应原项目 ./services/user/user_service.go
│           ├── service.go                 				# 认证用例
│           └── service_test.go            			# 认证用例测试
│
├── pkg/                          		# 公共代码包 对应原项目 ./utils/*
│   ├── logger/					# 日志 package logger 
│   │   ├── logger.go                      		# 日志接口定义
│   │   └── zap.go                        			# Zap实现
│   ├── errors/					# 错误 package errors
│   │   ├── errors.go                      		# 错误接口定义
│   │   └── impl.go                        			# 错误实现
│   └── utils/						# 通用工具
│       ├── validator.go                   		# package utils - 通用验证
│       └── time.go                        			# package utils - 时间工具
│
├── tests/                                  	# 集成测试和 E2E 测试
│   ├── integration/                        	# 集成测试
│   │   └── api/						# package integration
│   │       └── order_flow_test.go         			# 订单流程测试
│   │
│   └── e2e/                               		# 端到端测试 package e2e
│       └── trading_flow_test.go           		# 交易流程测试
│
├── build/                                  	# 构建相关
│   ├── Dockerfile                         		# Docker 构建文件
│   └── docker-compose.yml               # 容器编排配置
│
├── deployments/                       	# 部署配置
│   ├── kubernetes/                    		# K8s 配置
│   └── terraform/                         	# 基础设施即代码
│
├── docs/                                   	# 文档
│   ├── api/						# API 文档
│   │   └── swagger.yaml                   		# swagger 文档
│   └── architecture/				# 架构设计
│       └── design.md                      		# 架构设计文档
│
├── scripts/                                	# 脚本
│   ├── build.sh                           		# 构建脚本
│   └── deploy.sh                          		# 部署脚本
│
├── magefile.go                            # 项目管理命令
├── go.mod                                 	# Go 模块定义
├── go.sum                                 	# 依赖版本锁定
└── README.md                           # 项目说明